{"version":3,"file":"canvas-sketch.umd.js","sources":["../lib/util.js","../lib/save.js","../lib/paper-sizes.js","../lib/distances.js","../lib/hud/toParamProps.js","../lib/hud/ParamGroup.js","../lib/hud/style.js","../lib/hud/HUD.js","../lib/core/resizeCanvas.js","../lib/core/createCanvas.js","../lib/hud/ParamManager.js","../lib/core/SketchManager.js","../lib/core/keyboardShortcuts.js","../lib/canvas-sketch.js"],"sourcesContent":["// TODO: We can remove a huge chunk of bundle size by using a smaller\n// utility module for converting units.\nimport isDOM from 'is-dom';\n\nexport function getClientAPI () {\n  return typeof window !== 'undefined' && window['canvas-sketch-cli'];\n}\n\nexport function isBrowser () {\n  return typeof document !== 'undefined';\n}\n\nexport function isWebGLContext (ctx) {\n  return typeof ctx.clear === 'function' && typeof ctx.clearColor === 'function' && typeof ctx.bufferData === 'function';\n}\n\nexport function isCanvas (element) {\n  return isDOM(element) && /canvas/i.test(element.nodeName) && typeof element.getContext === 'function';\n}\n","import dateformat from 'dateformat';\nimport assign from 'object-assign';\nimport padLeft from 'pad-left';\nimport { getClientAPI } from './util';\n\nconst noop = () => {};\nlet link;\n\n// Alternative solution for saving files,\n// a bit slower and does not work in Safari\n// function fetchBlobFromDataURL (dataURL) {\n//   return window.fetch(dataURL).then(res => res.blob());\n// }\n\nconst supportedEncodings = [\n  'image/png',\n  'image/jpeg',\n  'image/webp'\n];\n\nexport function exportCanvas (canvas, opt = {}) {\n  const encoding = opt.encoding || 'image/png';\n  if (!supportedEncodings.includes(encoding)) throw new Error(`Invalid canvas encoding ${encoding}`);\n  let extension = (encoding.split('/')[1] || '').replace(/jpeg/i, 'jpg');\n  if (extension) extension = `.${extension}`.toLowerCase();\n  return {\n    extension,\n    type: encoding,\n    dataURL: canvas.toDataURL(encoding, opt.encodingQuality)\n  };\n}\n\nfunction createBlobFromDataURL (dataURL) {\n  return new Promise((resolve) => {\n    const splitIndex = dataURL.indexOf(',');\n    if (splitIndex === -1) {\n      resolve(new window.Blob());\n      return;\n    }\n    const base64 = dataURL.slice(splitIndex + 1);\n    const byteString = window.atob(base64);\n    const mimeMatch = /data:([^;+]);/.exec(dataURL);\n    const mime = (mimeMatch ? mimeMatch[1] : '') || undefined;\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    resolve(new window.Blob([ ab ], { type: mime }));\n  });\n}\n\nexport function saveDataURL (dataURL, opts = {}) {\n  return createBlobFromDataURL(dataURL)\n    .then(blob => saveBlob(blob, opts));\n}\n\nexport function saveBlob (blob, opts = {}) {\n  return new Promise(resolve => {\n    opts = assign({ extension: '', prefix: '', suffix: '' }, opts);\n    const filename = resolveFilename(opts);\n\n    const client = getClientAPI();\n    if (client && typeof client.saveBlob === 'function' && client.output) {\n      // native saving using a CLI tool\n      return client.saveBlob(blob, assign({}, opts, { filename }))\n        .then(ev => resolve(ev));\n    } else {\n      // force download\n      if (!link) {\n        link = document.createElement('a');\n        link.style.visibility = 'hidden';\n        link.target = '_blank';\n      }\n      link.download = filename;\n      link.href = window.URL.createObjectURL(blob);\n      document.body.appendChild(link);\n      link.onclick = () => {\n        link.onclick = noop;\n        setTimeout(() => {\n          window.URL.revokeObjectURL(blob);\n          document.body.removeChild(link);\n          link.removeAttribute('href');\n          resolve({ filename, client: false });\n        });\n      };\n      link.click();\n    }\n  });\n}\n\nexport function saveFile (data, opts = {}) {\n  const parts = Array.isArray(data) ? data : [ data ];\n  const blob = new window.Blob(parts, { type: opts.type || '' });\n  return saveBlob(blob, opts);\n}\n\nexport function getFileName () {\n  const dateFormatStr = `yyyy.mm.dd-HH.MM.ss`;\n  return dateformat(new Date(), dateFormatStr);\n}\n\nfunction resolveFilename (opt = {}) {\n  opt = assign({}, opt);\n\n  // Custom filename function\n  if (typeof opt.file === 'function') {\n    return opt.file(opt);\n  } else if (opt.file) {\n    return opt.file;\n  }\n\n  let frame = null;\n  let extension = '';\n  if (typeof opt.extension === 'string') extension = opt.extension;\n\n  if (typeof opt.frame === 'number') {\n    let totalFrames;\n    if (typeof opt.totalFrames === 'number') {\n      totalFrames = opt.totalFrames;\n    } else {\n      totalFrames = Math.max(1000, opt.frame);\n    }\n    frame = padLeft(String(opt.frame), String(totalFrames).length, '0');\n  }\n\n  const layerStr = isFinite(opt.totalLayers) && isFinite(opt.layer) && opt.totalLayers > 1 ? `${opt.layer}` : '';\n  if (frame != null) {\n    return [ layerStr, frame ].filter(Boolean).join('-') + extension;\n  } else {\n    const defaultFileName = opt.timeStamp;\n    return [ opt.prefix, opt.name || defaultFileName, layerStr, opt.hash, opt.suffix ].filter(Boolean).join('-') + extension;\n  }\n}\n","const defaultUnits = 'mm';\n\nconst data = [\n  // Common Paper Sizes\n  // (Mostly North-American based)\n  [ 'postcard', 101.6, 152.4 ],\n  [ 'poster-small', 280, 430 ],\n  [ 'poster', 460, 610 ],\n  [ 'poster-large', 610, 910 ],\n  [ 'business-card', 50.8, 88.9 ],\n\n  // Standard Paper Sizes\n  [ 'a0', 841, 1189 ],\n  [ 'a1', 594, 841 ],\n  [ 'a2', 420, 594 ],\n  [ 'a3', 297, 420 ],\n  [ 'a4', 210, 297 ],\n  [ 'a5', 148, 210 ],\n  [ 'a6', 105, 148 ],\n  [ 'a7', 74, 105 ],\n  [ 'a8', 52, 74 ],\n  [ 'a9', 37, 52 ],\n  [ 'a10', 26, 37 ],\n  [ '2a0', 1189, 1682 ],\n  [ '4a0', 1682, 2378 ],\n  [ 'b0', 1000, 1414 ],\n  [ 'b1', 707, 1000 ],\n  [ 'b1+', 720, 1020 ],\n  [ 'b2', 500, 707 ],\n  [ 'b2+', 520, 720 ],\n  [ 'b3', 353, 500 ],\n  [ 'b4', 250, 353 ],\n  [ 'b5', 176, 250 ],\n  [ 'b6', 125, 176 ],\n  [ 'b7', 88, 125 ],\n  [ 'b8', 62, 88 ],\n  [ 'b9', 44, 62 ],\n  [ 'b10', 31, 44 ],\n  [ 'b11', 22, 32 ],\n  [ 'b12', 16, 22 ],\n  [ 'c0', 917, 1297 ],\n  [ 'c1', 648, 917 ],\n  [ 'c2', 458, 648 ],\n  [ 'c3', 324, 458 ],\n  [ 'c4', 229, 324 ],\n  [ 'c5', 162, 229 ],\n  [ 'c6', 114, 162 ],\n  [ 'c7', 81, 114 ],\n  [ 'c8', 57, 81 ],\n  [ 'c9', 40, 57 ],\n  [ 'c10', 28, 40 ],\n  [ 'c11', 22, 32 ],\n  [ 'c12', 16, 22 ],\n\n  // Use inches for North American sizes,\n  // as it produces less float precision errors\n  [ 'half-letter', 5.5, 8.5, 'in' ],\n  [ 'letter', 8.5, 11, 'in' ],\n  [ 'legal', 8.5, 14, 'in' ],\n  [ 'junior-legal', 5, 8, 'in' ],\n  [ 'ledger', 11, 17, 'in' ],\n  [ 'tabloid', 11, 17, 'in' ],\n  [ 'ansi-a', 8.5, 11.0, 'in' ],\n  [ 'ansi-b', 11.0, 17.0, 'in' ],\n  [ 'ansi-c', 17.0, 22.0, 'in' ],\n  [ 'ansi-d', 22.0, 34.0, 'in' ],\n  [ 'ansi-e', 34.0, 44.0, 'in' ],\n  [ 'arch-a', 9, 12, 'in' ],\n  [ 'arch-b', 12, 18, 'in' ],\n  [ 'arch-c', 18, 24, 'in' ],\n  [ 'arch-d', 24, 36, 'in' ],\n  [ 'arch-e', 36, 48, 'in' ],\n  [ 'arch-e1', 30, 42, 'in' ],\n  [ 'arch-e2', 26, 38, 'in' ],\n  [ 'arch-e3', 27, 39, 'in' ]\n];\n\nexport default data.reduce((dict, preset) => {\n  const item = {\n    units: preset[3] || defaultUnits,\n    dimensions: [ preset[1], preset[2] ]\n  };\n  dict[preset[0]] = item;\n  dict[preset[0].replace(/-/g, ' ')] = item;\n  return dict;\n}, {});\n","import paperSizes from './paper-sizes';\nimport convertLength from 'convert-length';\n\nexport function getDimensionsFromPreset (dimensions, unitsTo = 'px', pixelsPerInch = 72) {\n  if (typeof dimensions === 'string') {\n    const key = dimensions.toLowerCase();\n    if (!(key in paperSizes)) {\n      throw new Error(`The dimension preset \"${dimensions}\" is not supported or could not be found; try using a4, a3, postcard, letter, etc.`)\n    }\n    const preset = paperSizes[key];\n    return preset.dimensions.map(d => {\n      return convertDistance(d, preset.units, unitsTo, pixelsPerInch);\n    });\n  } else {\n    return dimensions;\n  }\n}\n\nexport function convertDistance (dimension, unitsFrom = 'px', unitsTo = 'px', pixelsPerInch = 72) {\n  return convertLength(dimension, unitsFrom, unitsTo, {\n    pixelsPerInch,\n    precision: 4,\n    roundPixel: true\n  });\n}\n","// TODO: Use a smaller library that is just CSS compliant\n// import parseColor from 'parse-color';\n\nexport default (key, value, defaults) => {\n  let name = key;\n  let opt = defaults != null ? Object.assign({}, defaults) : {};\n  delete opt.meta; // don't maintain this from previous values\n  if (value && typeof value === 'object') {\n    opt = value;\n    if (opt.name != null) name = opt.name;\n    value = opt.value;\n  }\n\n  // if (typeof value === 'string') {\n  //   const parsedColor = opt.type !== 'text' ? parseColor(value) : null;\n\n  //   if (parsedColor) {\n  //     console.log(parsedColor);\n  //     // opt.meta = {\n  //     //   parsedColor: parsedColor\n  //     // };\n  //   }\n  // }\n\n  return Object.assign({}, opt, {\n    value,\n    name: name || ''\n  });\n};\n\nexport const reservedKeys = [];\n","/** @jsx h */\nimport { h, Component } from 'preact';\nimport toParamProps, { reservedKeys } from './toParamProps';\nimport parseColor from 'parse-color';\nimport defined from 'defined';\n\nconst ParamNode = (opt = {}) => {\n  let name = opt.name;\n  let value = opt.value;\n  let inputValue = value;\n  let inputType;\n  let attrs = {};\n\n  if (typeof value === 'string') {\n    const parsedColor = opt.type !== 'text' ? parseColor(value) : null;\n    if (parsedColor && parsedColor.hex) {\n      inputValue = parsedColor.hex;\n      inputType = 'color';\n    } else {\n      inputType = 'text';\n    }\n  } else if (typeof value === 'number') {\n    const hasMin = typeof opt.min !== 'undefined';\n    const hasMax = typeof opt.max !== 'undefined';\n\n    if (opt.type !== 'number' && (hasMin && hasMax)) {\n      inputType = 'range';\n    } else {\n      inputType = 'number';\n    }\n\n    if (hasMin) attrs.min = opt.min;\n    if (hasMax) attrs.max = opt.max;\n    if (typeof opt.step !== 'undefined') {\n      attrs.step = opt.step;\n    }\n  } else if (opt.type === 'checkbox' || typeof value === 'boolean') {\n    inputType = 'checkbox';\n    if (value) attrs.checked = 'checked';\n    inputValue = undefined;\n  }\n\n  const onChange = ev => {\n    const target = ev.currentTarget;\n    let newValue;\n    if (inputType === 'range' || inputType === 'number') {\n      newValue = target.valueAsNumber;\n    } else if (inputType === 'checkbox') {\n      newValue = Boolean(target.checked);\n    } else {\n      newValue = target.value;\n    }\n    opt.onChange(newValue);\n    return newValue;\n  };\n\n  if (opt.type === 'button' || typeof value === 'function') {\n    return <div class='canvas-sketch--hud-param-cell'>\n      <div class='canvas-sketch--hud-param-value' title={name}>\n        <button onClick={ev => {\n          ev.preventDefault();\n          if (typeof value === 'function') {\n            value(opt.sketch.props, opt.sketch.settings);\n          }\n        }}>{name}</button>\n      </div>\n    </div>;\n  } else {\n    if (inputType) {\n      if (inputValue == null) {\n        if (inputType === 'number' || inputType === 'range') {\n          inputValue = defined(attrs.min, 0);\n        } else if (inputType === 'checkbox') {\n          inputValue = false;\n        }\n      }\n      value = <input\n        {...attrs}\n        onChange={ev => {\n          const result = onChange(ev);\n          opt.onFinishChange(result);\n        }}\n        onInput={onChange}\n        type={inputType}\n        value={inputValue}\n      />;\n    }\n\n    return <div class='canvas-sketch--hud-param-cell'>\n      <div class='canvas-sketch--hud-param-label' title={name}>{name}</div>\n      <div class='canvas-sketch--hud-param-value'>{value}</div>\n    </div>;\n  }\n};\n\nconst ParamGroup = (props = {}) => {\n  const {\n    params,\n    filter,\n    sketch,\n    header\n  } = props;\n\n  const paramNodes = Object.keys(params).map(key => {\n    const value = params[key];\n\n    if (reservedKeys.includes(key)) {\n      // Don't render reserved keys for now...\n      return false;\n    }\n\n    const paramProps = toParamProps(key, value);\n    // Param is hidden\n    if (paramProps.visible === false) {\n      return false;\n    }\n\n    // Param is filtered out\n    if (filter && paramProps.name) {\n      const matches = paramProps.name.toLowerCase().includes(filter);\n      if (!matches) return false;\n    }\n\n    if (paramProps.type === 'folder') {\n      return <ParamGroup\n        {...props}\n        header={paramProps.name}\n        params={value}\n      />;\n    } else {\n      return <ParamNode\n        sketch={sketch}\n        {...paramProps}\n        key={key}\n        onFinishChange={ev => {\n          sketch._paramManager.applyChanges();\n        }}\n        onChange={ev => {\n          const newParams = {};\n          newParams[key] = ev;\n          sketch.update({\n            params: newParams\n          });\n        }}\n      />;\n    }\n  }).filter(Boolean);\n\n  return <div class='canvas-sketch--hud-params'>\n    {header && <header class='canvas-sketch--hud-params-header'>{header}</header>}\n    {paramNodes}\n  </div>;\n};\n\nexport default ParamGroup;\n","export default `\n.canvas-sketch--hud-container {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  font-size: 14px;\n  align-self: flex-start;\n  height: 100%;\n  max-width: 20vw;\n  flex-grow: 1;\n  flex-shrink: 1;\n  overflow-y: auto;\n  background: hsl(0, 0%, 95%);\n  min-width: 225px;\n}\n\n.canvas-sketch--hud-float {\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.canvas-sketch--hud-sketch > header {\n  background: gray;\n  padding: 5px;\n  color: white;\n}\n\n.canvas-sketch--hud-container input[type='text'],\n.canvas-sketch--hud-container input[type='number'] {\n  font-family: \"Andale Mono\", monospace;\n  width: 100%;\n  outline: none;\n  padding: 5px;\n  margin: 0;\n}\n\n.canvas-sketch--hud-sketch input[type='range'] {\n  width: 100%;\n  cursor: pointer;\n  outline: none;\n  padding: 0px;\n  margin: 0;\n}\n\n.canvas-sketch--hud-sketch input[type='color'] {\n  border: none;\n  width: 100%;\n  padding: 0;\n  cursor: pointer;\n  outline: none;\n  margin: 0;\n  background: transparent;\n  -webkit-appearance: none;\n}\n.canvas-sketch--hud-sketch input[type=\"color\"]::-webkit-color-swatch-wrapper {\n  padding: 0;\n  background: transparent;\n}\n.canvas-sketch--hud-sketch input[type=\"color\"]::-webkit-color-swatch {\n  border: none;\n  background: transparent;\n  border-radius: 2px;\n}\n\n.canvas-sketch--hud-params {\n  box-sizing: border-box;\n}\n.canvas-sketch--hud-params .canvas-sketch--hud-params {\n  border-left: 5px solid hsl(0, 0%, 65%);\n}\n.canvas-sketch--hud-params-header {\n  min-height: 26px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  line-height: 26px;\n  min-height: 26px;\n  padding: 0px 5px;\n  background: hsl(0, 0%, 75%);\n  min-width: 100px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border-bottom: 1px solid black;\n}\n.canvas-sketch--hud-param-cell {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  border-bottom: 1px solid black;\n  flex-direction: row;\n}\n\n.canvas-sketch--hud-param-value {\n  min-height: 26px;\n  display: flex;\n  padding: 5px 5px;\n  min-width: 100px;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  flex-direction: row;\n}\n\n/*.canvas-sketch--hud-param-cell:last-child {\n  border-bottom: none;\n}*/\n\n.canvas-sketch--hud-param-label {\n  line-height: 26px;\n  min-height: 26px;\n  padding: 5px;\n  min-width: 100px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border-right: 1px solid black;\n}\n\n.canvas-sketch--hud-container button {\n  outline: none;\n  background: #fff;\n  padding: 5px 10px;\n  border: 1px solid #cccccc;\n  border-radius: 5px;\n  width: 100%;\n  cursor: pointer;\n}\n.canvas-sketch--hud-container button:hover {\n  border-color: #a9a9a9;\n}\n.canvas-sketch--hud-container button:active {\n  background: #eaeaea;\n}\n\n.canvas-sketch--hud-filter {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  margin: 0px;\n  box-sizing: border-box;\n  width: 100%;\n  border-bottom: 1px solid black;\n}\n.canvas-sketch--hud-filter input[type='text'] {\n  width: 100%;\n  padding: 5px;\n  border: 1px solid #cccccc;\n  border-radius: 5px;\n  margin: 0px;\n}\n.canvas-sketch--hud-filter input[type='text']::placeholder {\n  opacity: 0.5;\n  font-style: italic;\n}\n`;\n","/** @jsx h */\nimport { render, h } from 'preact';\nimport { isBrowser } from '../util';\nimport HUDApp from './App';\nimport insertCSS from 'insert-css';\nimport CSS from './style.js';\n\nlet inserted = false;\n\nfunction HUD () {\n  const attached = [];\n  let element = null;\n  let floating = false;\n  const browser = isBrowser();\n\n  return {\n    getSize () {\n      if (!element) return null;\n      return element.getBoundingClientRect();\n    },\n    attach,\n    detach,\n    update,\n    float,\n    dock\n  };\n\n  function _updateFloat () {\n    if (element) {\n      element.classList.remove('canvas-sketch--hud-float');\n      if (floating) element.classList.add('canvas-sketch--hud-float');\n    }\n  }\n\n  function float () {\n    floating = true;\n    _updateFloat();\n  }\n\n  function dock () {\n    floating = false;\n    _updateFloat();\n  }\n\n  function detach (manager) {\n    if (!browser) return;\n    const idx = attached.indexOf(manager);\n    if (idx !== -1) {\n      attached.splice(idx, 1);\n    }\n\n    update();\n  }\n\n  function attach (manager) {\n    if (!browser) return;\n    if (!attached.includes(manager)) {\n      attached.push(manager);\n    }\n\n    update();\n  }\n\n  function update () {\n    if (attached.length > 0) {\n      if (!element) {\n        element = document.createElement('div');\n        element.classList.add('canvas-sketch--hud-container');\n        _updateFloat();\n        document.body.appendChild(element);\n      }\n      if (!inserted) {\n        insertCSS(CSS);\n        inserted = true;\n      }\n      render(<HUDApp sketches={attached} />, element, element.firstElementChild);\n    } else if (attached.length === 0 && element) {\n      if (element.parentElement) element.parentElement.removeChild(element);\n      element = null;\n    }\n  }\n}\n\nexport default HUD();\n","import defined from 'defined';\nimport { getDimensionsFromPreset, convertDistance } from '../distances';\nimport { isBrowser } from '../util';\nimport HUD from '../hud/HUD';\n\nfunction checkIfHasDimensions (settings) {\n  if (!settings.dimensions) return false;\n  if (typeof settings.dimensions === 'string') return true;\n  if (Array.isArray(settings.dimensions) && settings.dimensions.length >= 2) return true;\n  return false;\n}\n\nfunction getParentSize (props, settings) {\n  // When no { dimension } is passed in node, we default to HTML canvas size\n  if (!isBrowser) {\n    return [ 300, 150 ];\n  }\n\n  let element = settings.parent || window;\n\n  if (element === window ||\n      element === document ||\n      element === document.body) {\n    // NOTE: When HUD is enabled, we shrink the \"body viewport\"\n    // down a bit so it fits nicely inside. Please open an issue\n    // if you have another suggested approach to handling this! :)\n    const hudSize = HUD.getSize();\n    const hudWidth = hudSize ? hudSize.width : 0;\n    return [\n      window.innerWidth - hudWidth,\n      window.innerHeight\n    ];\n  } else {\n    const { width, height } = element.getBoundingClientRect();\n    return [ width, height ];\n  }\n}\n\nexport default function resizeCanvas (props, settings) {\n  let width, height;\n  let styleWidth, styleHeight;\n  let canvasWidth, canvasHeight;\n\n  const dimensions = settings.dimensions;\n  const hasDimensions = checkIfHasDimensions(settings);\n  const exporting = props.exporting;\n  const scaleToFit = hasDimensions ? settings.scaleToFit !== false : false;\n  const scaleToView = (!exporting && hasDimensions) ? settings.scaleToView : true;\n  const units = settings.units;\n  const pixelsPerInch = (typeof settings.pixelsPerInch === 'number' && isFinite(settings.pixelsPerInch)) ? settings.pixelsPerInch : 72;\n  const bleed = defined(settings.bleed, 0);\n\n  const devicePixelRatio = isBrowser() ? window.devicePixelRatio : 1;\n  const basePixelRatio = scaleToView ? devicePixelRatio : 1;\n\n  let pixelRatio, exportPixelRatio;\n\n  // If a pixel ratio is specified, we will use it.\n  // Otherwise:\n  //  -> If dimension is specified, use base ratio (i.e. size for export)\n  //  -> If no dimension is specified, use device ratio (i.e. size for screen)\n  if (typeof settings.pixelRatio === 'number' && isFinite(settings.pixelRatio)) {\n    // When { pixelRatio } is specified, it's also used as default exportPixelRatio.\n    pixelRatio = settings.pixelRatio;\n    exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);\n  } else {\n    if (hasDimensions) {\n      // When a dimension is specified, use the base ratio rather than screen ratio\n      pixelRatio = basePixelRatio;\n      // Default to a pixel ratio of 1 so that you end up with the same dimension\n      // you specified, i.e. [ 500, 500 ] is exported as 500x500 px\n      exportPixelRatio = defined(settings.exportPixelRatio, 1);\n    } else {\n      // No dimension is specified, assume full-screen sizing\n      pixelRatio = devicePixelRatio;\n      // Default to screen pixel ratio, so that it's like taking a device screenshot\n      exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);\n    }\n  }\n\n  // Clamp pixel ratio\n  if (typeof settings.maxPixelRatio === 'number' && isFinite(settings.maxPixelRatio)) {\n    pixelRatio = Math.min(settings.maxPixelRatio, pixelRatio);\n    exportPixelRatio = Math.min(settings.maxPixelRatio, exportPixelRatio);\n  }\n\n  // Handle export pixel ratio\n  if (exporting) {\n    pixelRatio = exportPixelRatio;\n  }\n\n  // parentWidth = typeof parentWidth === 'undefined' ? defaultNodeSize[0] : parentWidth;\n  // parentHeight = typeof parentHeight === 'undefined' ? defaultNodeSize[1] : parentHeight;\n\n  let [ parentWidth, parentHeight ] = getParentSize(props, settings);\n  let trimWidth, trimHeight;\n\n  // You can specify a dimensions in pixels or cm/m/in/etc\n  if (hasDimensions) {\n    const result = getDimensionsFromPreset(dimensions, units, pixelsPerInch);\n    const highest = Math.max(result[0], result[1]);\n    const lowest = Math.min(result[0], result[1]);\n    if (settings.orientation) {\n      const landscape = settings.orientation === 'landscape';\n      width = landscape ? highest : lowest;\n      height = landscape ? lowest : highest;\n    } else {\n      width = result[0];\n      height = result[1];\n    }\n\n    trimWidth = width;\n    trimHeight = height;\n\n    // Apply bleed which is assumed to be in the same units\n    width += bleed * 2;\n    height += bleed * 2;\n  } else {\n    width = parentWidth;\n    height = parentHeight;\n    trimWidth = width;\n    trimHeight = height;\n  }\n\n  // Real size in pixels after PPI is taken into account\n  let realWidth = width;\n  let realHeight = height;\n  if (hasDimensions && units) {\n    // Convert to digital/pixel units if necessary\n    realWidth = convertDistance(width, units, 'px', pixelsPerInch);\n    realHeight = convertDistance(height, units, 'px', pixelsPerInch);\n  }\n\n  // How big to set the 'view' of the canvas in the browser (i.e. style)\n  styleWidth = Math.round(realWidth);\n  styleHeight = Math.round(realHeight);\n\n  // If we wish to scale the view to the browser window\n  if (scaleToFit && !exporting && hasDimensions) {\n    const aspect = width / height;\n    const windowAspect = parentWidth / parentHeight;\n    // Simple breakpoint to fill more space on small screens\n    const defaultPadding = parentWidth < 640 ? 20 : 40;\n    const scaleToFitPadding = defined(settings.scaleToFitPadding, defaultPadding);\n    const maxWidth = Math.round(parentWidth - scaleToFitPadding * 2);\n    const maxHeight = Math.round(parentHeight - scaleToFitPadding * 2);\n    if (styleWidth > maxWidth || styleHeight > maxHeight) {\n      if (windowAspect > aspect) {\n        styleHeight = maxHeight;\n        styleWidth = Math.round(styleHeight * aspect);\n      } else {\n        styleWidth = maxWidth;\n        styleHeight = Math.round(styleWidth / aspect);\n      }\n    }\n  }\n\n  canvasWidth = scaleToView ? Math.round(pixelRatio * styleWidth) : Math.round(exportPixelRatio * realWidth);\n  canvasHeight = scaleToView ? Math.round(pixelRatio * styleHeight) : Math.round(exportPixelRatio * realHeight);\n\n  const viewportWidth = scaleToView ? Math.round(styleWidth) : Math.round(realWidth);\n  const viewportHeight = scaleToView ? Math.round(styleHeight) : Math.round(realHeight);\n\n  const scaleX = canvasWidth / width;\n  const scaleY = canvasHeight / height;\n\n  // Assign to current props\n  return {\n    bleed,\n    pixelRatio,\n    width,\n    height,\n    dimensions: [ width, height ],\n    units: units || 'px',\n    scaleX,\n    scaleY,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    trimWidth,\n    trimHeight,\n    styleWidth,\n    styleHeight\n  };\n}\n","import assign from 'object-assign';\nimport getCanvasContext from 'get-canvas-context';\nimport { isBrowser } from '../util';\n\nfunction createCanvasElement () {\n  if (!isBrowser()) {\n    throw new Error('It appears you are runing from Node.js or a non-browser environment. Try passing in an existing { canvas } interface instead.');\n  }\n  return document.createElement('canvas');\n}\n\nexport default function createCanvas (settings = {}) {\n  let context, canvas;\n  let ownsCanvas = false;\n  if (settings.canvas !== false) {\n    // Determine the canvas and context to create\n    context = settings.context;\n    if (!context || typeof context === 'string') {\n      let newCanvas = settings.canvas;\n      if (!newCanvas) {\n        newCanvas = createCanvasElement();\n        ownsCanvas = true;\n      }\n      const type = context || '2d';\n      if (typeof newCanvas.getContext !== 'function') {\n        throw new Error(`The specified { canvas } element does not have a getContext() function, maybe it is not a <canvas> tag?`);\n      }\n      context = getCanvasContext(type, assign({}, settings.attributes, { canvas: newCanvas }));\n      if (!context) {\n        throw new Error(`Failed at canvas.getContext('${type}') - the browser may not support this context, or a different context may already be in use with this canvas.`);\n      }\n    }\n\n    canvas = context.canvas;\n    // Ensure context matches user's canvas expectations\n    if (settings.canvas && canvas !== settings.canvas) {\n      throw new Error('The { canvas } and { context } settings must point to the same underlying canvas element');\n    }\n\n    // Apply pixelation to canvas if necessary, this is mostly a convenience utility\n    if (settings.pixelated) {\n      context.imageSmoothingEnabled = false;\n      context.mozImageSmoothingEnabled = false;\n      context.oImageSmoothingEnabled = false;\n      context.webkitImageSmoothingEnabled = false;\n      context.msImageSmoothingEnabled = false;\n      canvas.style['image-rendering'] = 'pixelated';\n    }\n  }\n  return { canvas, context, ownsCanvas };\n}\n","import toParamProps, { reservedKeys } from './toParamProps';\nimport { isBrowser } from '../util';\nimport defined from 'defined';\n\nexport default class ParamManager {\n  constructor () {\n    this.props = {};\n    this.proxy = {};\n    this.storageKey = null;\n    this.storage = null;\n    this.setStorageKey();\n  }\n\n  clear () {\n    // Clear both in case user added any for some reason...\n    Object.keys(this.props).forEach(key => this.clearProp(key));\n    this.storage = null;\n  }\n\n  enabled () {\n    return Object.keys(this.props).filter(n => !reservedKeys.includes(n)).length > 0;\n  }\n\n  serialize (pretty = false) {\n    return JSON.stringify(this.props, undefined, pretty ? 2 : undefined);\n  }\n\n  setStorageKey (storageKey) {\n    const lastStorageKey = this.storageKey;\n    const newStorage = defined(storageKey, global.CANVAS_SKETCH_DEFAULT_STORAGE_KEY, window.location.href);\n    this.storageKey = newStorage;\n    // Clear any last storage as we have a new key coming in\n    if (lastStorageKey !== newStorage) {\n      this.storage = null;\n    }\n  }\n\n  ensureStorageLoaded () {\n    if (this.storage == null) {\n      this.storage = getStorage(this.storageKey);\n    }\n    return this.storage;\n  }\n\n  store () {\n    putStorage(this.storageKey, this.serialize());\n  }\n\n  clearProp (key) {\n    delete this.props[key];\n    delete this.proxy[key];\n  }\n\n  clampProp (prop) {\n    if (typeof prop.value !== 'number') {\n      return false;\n    }\n\n    if (typeof prop.min === 'number' && isFinite(prop.min)) {\n      prop.value = Math.max(prop.min, prop.value);\n    }\n\n    if (typeof prop.max === 'number' && isFinite(prop.max)) {\n      prop.value = Math.min(prop.max, prop.value);\n    }\n  }\n\n  addProp (key, opt = {}) {\n    opt = Object.assign({}, opt);\n    opt.initialValue = opt.value;\n    if (this.storage != null && key in this.storage) {\n      // Only take persisted value if the user hasn't updated the code\n      if (opt.initialValue === this.storage[key].initialValue) {\n        opt.value = this.storage[key].value;\n      }\n    }\n    this.props[key] = opt;\n  }\n\n  updateProp (key, opt = {}) {\n    opt = Object.assign({}, opt);\n    Object.assign(this.props[key], opt);\n  }\n\n  merge (params = {}) {\n    // now load from storage if we haven't already\n    this.ensureStorageLoaded();\n    Object.keys(params).forEach(key => {\n      let value = params[key];\n\n      if (value === null) {\n        // User is deleting a specific param\n        this.clearProp(key);\n      } else {\n        const paramProps = toParamProps(key, value, this.props[key]);\n        if (key in this.props) {\n          this.updateProp(key, paramProps);\n        } else {\n          this.addProp(key, paramProps);\n        }\n        this.clampProp(this.props[key]);\n        this.updatePropValue(key, value, paramProps);\n      }\n    });\n    this.store();\n  }\n\n  updatePropValue (key, value, computedProps) {\n    const curProp = this.props[key] || {};\n    if (reservedKeys.includes(key)) {\n      if (typeof computedProps.value !== 'undefined') {\n        console.warn(`The { params } object has a parameter called \"${key}\" but this key is reserved for GUI metadata`);\n      }\n      this.proxy[key] = value;\n    } else if (curProp.type === 'color') {\n      this.proxy[key] = curProp.value;\n    } else {\n      this.proxy[key] = curProp.value;\n    }\n  }\n\n  applyChanges () {\n    console.log('push to undo redo stack');\n  }\n}\n\nfunction getStorage (key) {\n  if (!isBrowser()) return {};\n  if (key) {\n    const value = window.localStorage.getItem(key);\n    if (value == null) return {};\n    try {\n      return JSON.parse(value);\n    } catch (err) {\n      console.warn(`Could not parse localStorage at ${key}`);\n      console.warn(err);\n      return {};\n    }\n  } else {\n    return {};\n  }\n}\n\nfunction putStorage (key, data) {\n  if (!isBrowser()) return;\n  if (key) {\n    window.localStorage.setItem(key, data);\n  }\n}\n","import defined from 'defined';\nimport assign from 'object-assign';\nimport rightNow from 'right-now';\nimport isPromise from 'is-promise';\nimport { isBrowser, isWebGLContext, isCanvas, getClientAPI } from '../util';\nimport deepEqual from 'deep-equal';\nimport { saveFile, saveDataURL, getFileName, exportCanvas } from '../save';\n\nimport keyboardShortcuts from './keyboardShortcuts';\nimport resizeCanvas from './resizeCanvas';\nimport createCanvas from './createCanvas';\n\nimport ParamManager from '../hud/ParamManager';\nimport HUD from '../hud/HUD';\n\nclass SketchManager {\n  constructor () {\n    this._settings = {};\n    this._props = {};\n    this._sketch = undefined;\n    this._raf = null;\n    this._paramManager = new ParamManager();\n\n    // Some hacky things required to get around p5.js structure\n    this._lastRedrawResult = undefined;\n    this._isP5Resizing = false;\n\n    this._keyboardShortcuts = keyboardShortcuts({\n      enabled: () => this.settings.hotkeys !== false,\n      save: (ev) => {\n        if (ev.shiftKey) {\n          if (this.props.recording) {\n            this.endRecord();\n            this.play();\n          } else this.record();\n        } else this.exportFrame();\n      },\n      togglePlay: () => {\n        if (this.props.playing) this.pause();\n        else this.play();\n      },\n      commit: (ev) => {\n        this.exportFrame({ commit: true });\n      }\n    });\n\n    this._animateHandler = () => this.animate();\n\n    this._resizeHandler = () => {\n      const changed = this.resize();\n      // Only re-render when size actually changes\n      if (changed) {\n        this.render();\n      }\n    };\n  }\n\n  get sketch () {\n    return this._sketch;\n  }\n\n  get settings () {\n    return this._settings;\n  }\n\n  get props () {\n    return this._props;\n  }\n\n  _getParamSettings () {\n    return this._settings.paramOptions || {};\n  }\n\n  _computePlayhead (currentTime, duration) {\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n    return hasDuration ? currentTime / duration : 0;\n  }\n\n  _computeFrame (playhead, time, totalFrames, fps) {\n    return (isFinite(totalFrames) && totalFrames > 1)\n      ? Math.floor(playhead * (totalFrames - 1))\n      : Math.floor(fps * time);\n  }\n\n  _computeCurrentFrame () {\n    return this._computeFrame(\n      this.props.playhead, this.props.time,\n      this.props.totalFrames, this.props.fps\n    );\n  }\n\n  _getSizeProps () {\n    const props = this.props;\n    return {\n      width: props.width,\n      height: props.height,\n      pixelRatio: props.pixelRatio,\n      canvasWidth: props.canvasWidth,\n      canvasHeight: props.canvasHeight,\n      viewportWidth: props.viewportWidth,\n      viewportHeight: props.viewportHeight\n    };\n  }\n\n  run () {\n    if (!this.sketch) throw new Error('should wait until sketch is loaded before trying to play()');\n\n    // Start an animation frame loop if necessary\n    if (this.settings.playing !== false) {\n      this.play();\n    }\n\n    // Let's let this warning hang around for a few versions...\n    if (typeof this.sketch.dispose === 'function') {\n      console.warn('In canvas-sketch@0.0.23 the dispose() event has been renamed to unload()');\n    }\n\n    // In case we aren't playing or animated, make sure we still trigger begin message...\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // Render an initial frame\n    this.tick();\n    this.render();\n    return this;\n  }\n\n  play () {\n    let animate = this.settings.animate;\n    if ('animation' in this.settings) {\n      animate = true;\n      console.warn('[canvas-sketch] { animation } has been renamed to { animate }');\n    }\n    if (!animate) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Using { animate } in Node.js is not yet supported');\n      return;\n    }\n    if (this.props.playing) return;\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // console.log('play', this.props.time)\n\n    // Start a render loop\n    this.props.playing = true;\n    if (this._raf != null) window.cancelAnimationFrame(this._raf);\n    this._lastTime = rightNow();\n    this._raf = window.requestAnimationFrame(this._animateHandler);\n  }\n\n  pause () {\n    if (this.props.recording) this.endRecord();\n    this.props.playing = false;\n\n    // console.log('pause', this.props.time)\n    if (this._raf != null && isBrowser()) window.cancelAnimationFrame(this._raf);\n  }\n\n  togglePlay () {\n    if (this.props.playing) this.pause();\n    else this.play();\n  }\n\n  // Stop and reset to frame zero\n  stop () {\n    this.pause();\n    this.props.frame = 0;\n    this.props.playhead = 0;\n    this.props.time = 0;\n    this.props.deltaTime = 0;\n    this.props.started = false;\n    this.render();\n  }\n\n  record () {\n    if (this.props.recording) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Recording from Node.js is not yet supported');\n      return;\n    }\n    this.stop();\n    this.props.playing = true;\n    this.props.recording = true;\n\n    let exportParams = true;\n    const frameInterval = 1 / this.props.fps;\n    // Render each frame in the sequence\n    if (this._raf != null) window.cancelAnimationFrame(this._raf);\n    const tick = () => {\n      if (!this.props.recording) return Promise.resolve();\n      this.props.deltaTime = frameInterval;\n      this.tick();\n      return this.exportFrame({ sequence: true, exportParams })\n        .then(() => {\n          if (!this.props.recording) return; // was cancelled before\n          exportParams = false;\n          this.props.deltaTime = 0;\n          this.props.frame++;\n          if (this.props.frame < this.props.totalFrames) {\n            this.props.time += frameInterval;\n            this.props.playhead = this._computePlayhead(this.props.time, this.props.duration);\n            this._raf = window.requestAnimationFrame(tick);\n          } else {\n            console.log('Finished recording');\n            this._signalEnd();\n            this.endRecord();\n            this.stop();\n            this.run();\n          }\n        });\n    };\n\n    // Trigger a start event before we begin recording\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    this._raf = window.requestAnimationFrame(tick);\n  }\n\n  _signalBegin () {\n    if (this.sketch && typeof this.sketch.begin === 'function') {\n      this._wrapContextScale(props => this.sketch.begin(props));\n    }\n  }\n\n  _signalEnd () {\n    if (this.sketch && typeof this.sketch.end === 'function') {\n      this._wrapContextScale(props => this.sketch.end(props));\n    }\n  }\n\n  endRecord () {\n    if (this._raf != null && isBrowser()) window.cancelAnimationFrame(this._raf);\n    this.props.recording = false;\n    this.props.deltaTime = 0;\n  }\n\n  exportFrame (opt = {}) {\n    if (!this.sketch) return Promise.all([]);\n    if (typeof this.sketch.preExport === 'function') {\n      this.sketch.preExport();\n    }\n\n    // Options for export function\n    let exportOpts = assign({\n      sequence: opt.sequence,\n      exportParams: opt.exportParams !== false,\n      frame: opt.sequence ? this.props.frame : undefined,\n      file: this.settings.file,\n      name: this.settings.name,\n      prefix: this.settings.prefix,\n      suffix: this.settings.suffix,\n      encoding: this.settings.encoding,\n      encodingQuality: this.settings.encodingQuality,\n      timeStamp: getFileName(),\n      totalFrames: isFinite(this.props.totalFrames) ? Math.max(100, this.props.totalFrames) : 1000\n    });\n\n    const client = getClientAPI();\n    let p = Promise.resolve();\n    if (client && opt.commit && typeof client.commit === 'function') {\n      const commitOpts = assign({}, exportOpts);\n      const hash = client.commit(commitOpts);\n      if (isPromise(hash)) p = hash;\n      else p = Promise.resolve(hash);\n    }\n\n    return p.then(hash => {\n      return this._doExportFrame(assign({}, exportOpts, { hash: hash || '' }));\n    });\n  }\n\n  _doExportFrame (exportOpts = {}) {\n    this._props.exporting = true;\n\n    // Resize to output resolution\n    this.resize();\n\n    // Draw at this output resolution\n    let drawResult = this.render();\n\n    // The self owned canvas (may be undefined...!)\n    const canvas = this.props.canvas;\n\n    // Get list of results from render\n    if (typeof drawResult === 'undefined') {\n      drawResult = [ canvas ];\n    }\n\n    drawResult = [].concat(drawResult).filter(Boolean);\n\n    let paramData;\n    if (exportOpts.exportParams !== false &&\n        this._paramManager.enabled() &&\n        this._getParamSettings().export !== false) {\n      paramData = this._paramManager.serialize(true);\n    }\n\n    // Transform the canvas/file descriptors into a consistent format,\n    // and pull out any data URLs from canvas elements\n    drawResult = drawResult.map(result => {\n      const hasDataObject = typeof result === 'object' && result && ('data' in result || 'dataURL' in result);\n      const data = hasDataObject ? result.data : result;\n      const opts = hasDataObject ? assign({}, result, { data }) : { data };\n      if (isCanvas(data)) {\n        const encoding = opts.encoding || exportOpts.encoding;\n        const encodingQuality = defined(opts.encodingQuality, exportOpts.encodingQuality, 0.95);\n        const { dataURL, extension, type } = exportCanvas(data, { encoding, encodingQuality });\n        return Object.assign(opts, { dataURL, extension, type });\n      } else {\n        return opts;\n      }\n    });\n\n    // Now return to regular rendering mode\n    this._props.exporting = false;\n    this.resize();\n    this.render();\n\n    // And now we can save each result\n    return Promise.all(drawResult.map((result, i, layerList) => {\n      // By default, if rendering multiple layers we will give them indices\n      const curOpt = assign({}, exportOpts, result, {\n        layer: i,\n        totalLayers: layerList.length\n      });\n      const data = result.data;\n      if (result.dataURL) {\n        const dataURL = result.dataURL;\n        delete curOpt.dataURL; // avoid sending entire base64 data around\n        return saveDataURL(dataURL, curOpt);\n      } else {\n        return saveFile(data, curOpt);\n      }\n    })).then(ev => {\n      if (ev.length > 0) {\n        const eventWithOutput = ev.find(e => e.outputName);\n        const isClient = ev.some(e => e.client);\n        let item;\n        // many files, just log how many were exported\n        if (ev.length > 1) item = ev.length;\n        // in CLI, we know exact path dirname\n        else if (eventWithOutput) item = `${eventWithOutput.outputName}/${ev[0].filename}`;\n        // in browser, we can only know it went to \"browser download folder\"\n        else item = `${ev[0].filename}`;\n        let ofSeq = '';\n        if (exportOpts.sequence) {\n          const hasTotalFrames = isFinite(this.props.totalFrames);\n          ofSeq = hasTotalFrames ? ` (frame ${exportOpts.frame + 1} / ${this.props.totalFrames})` : ` (frame ${exportOpts.frame})`;\n        } else if (ev.length > 1) {\n          ofSeq = ` files`;\n        }\n        const client = isClient ? 'canvas-sketch-cli' : 'canvas-sketch';\n        console.log(`%c[${client}]%c Exported %c${item}%c${ofSeq}`, 'color: #8e8e8e;', 'color: initial;', 'font-weight: bold;', 'font-weight: initial;');\n      }\n    }).then(() => {\n      if (paramData != null) {\n        return saveFile(paramData, assign({}, exportOpts, {\n          params: true,\n          extension: '.params.json'\n        }));\n      }\n    })\n      .then(() => {\n        if (typeof this.sketch.postExport === 'function') {\n          this.sketch.postExport();\n        }\n      });\n  }\n\n  _wrapContextScale (cb) {\n    this._preRender();\n    cb(this.props);\n    this._postRender();\n  }\n\n  _preRender () {\n    const props = this.props;\n\n    // Scale context for unit sizing\n    if (!this.props.gl && props.context && !props.p5) {\n      props.context.save();\n      if (this.settings.scaleContext !== false) {\n        props.context.scale(props.scaleX, props.scaleY);\n      }\n    } else if (props.p5) {\n      props.p5.scale(props.scaleX / props.pixelRatio, props.scaleY / props.pixelRatio);\n    }\n  }\n\n  _postRender () {\n    const props = this.props;\n\n    if (!this.props.gl && props.context && !props.p5) {\n      props.context.restore();\n    }\n\n    // Flush by default, this may be revisited at a later point.\n    // We do this to ensure toDataURL can be called immediately after.\n    // Most likely browsers already handle this, so we may revisit this and\n    // remove it if it improves performance without any usability issues.\n    if (props.gl && this.settings.flush !== false && !props.p5) {\n      props.gl.flush();\n    }\n  }\n\n  tick () {\n    if (this.sketch && typeof this.sketch.tick === 'function') {\n      this._preRender();\n      this.sketch.tick(this.props);\n      this._postRender();\n    }\n  }\n\n  render () {\n    if (this.props.p5) {\n      this._lastRedrawResult = undefined;\n      this.props.p5.redraw();\n      return this._lastRedrawResult;\n    } else {\n      return this.submitDrawCall();\n    }\n  }\n\n  submitDrawCall () {\n    if (!this.sketch) return;\n\n    const props = this.props;\n    this._preRender();\n\n    let drawResult;\n\n    if (typeof this.sketch === 'function') {\n      drawResult = this.sketch(props);\n    } else if (typeof this.sketch.render === 'function') {\n      drawResult = this.sketch.render(props);\n    }\n\n    this._postRender();\n\n    return drawResult;\n  }\n\n  update (opt = {}) {\n    // Currently update() is only focused on resizing,\n    // but later we will support other options like switching\n    // frames and such.\n    const notYetSupported = [\n      'animate'\n    ];\n\n    // Copy input...\n    opt = Object.assign({}, opt);\n\n    Object.keys(opt).forEach(key => {\n      if (notYetSupported.indexOf(key) >= 0) {\n        throw new Error(`Sorry, the { ${key} } option is not yet supported with update().`);\n      }\n    });\n\n    const oldCanvas = this._settings.canvas;\n    const oldContext = this._settings.context;\n\n    // Merge new options into settings\n    for (let key in opt) {\n      const value = opt[key];\n      if (typeof value !== 'undefined') { // ignore undefined\n        this._settings[key] = value;\n      }\n    }\n\n    if ('paramOptions' in opt) {\n      this._paramManager.setStorageKey(this._getParamSettings().storageKey);\n    }\n\n    // Incoming settings wants to modify params\n    if ('params' in opt) {\n      if (this._settings.params) {\n        // Merge in each new features\n        this._paramManager.merge(this._settings.params);\n      } else {\n        // Clear all params\n        this._paramManager.clear();\n      }\n    }\n\n    if ('params' in opt || 'paramOptions' in opt) {\n      const isParamsEnabled = this._paramManager.enabled();\n      if (isParamsEnabled && this._getParamSettings().visible !== false) {\n        HUD.attach(this);\n      } else {\n        HUD.detach(this);\n      }\n    }\n\n    // Merge in time props\n    const timeOpts = Object.assign({}, this._settings, opt);\n    if ('time' in opt && 'frame' in opt) throw new Error('You should specify { time } or { frame } but not both');\n    else if ('time' in opt) delete timeOpts.frame;\n    else if ('frame' in opt) delete timeOpts.time;\n    if ('duration' in opt && 'totalFrames' in opt) throw new Error('You should specify { duration } or { totalFrames } but not both');\n    else if ('duration' in opt) delete timeOpts.totalFrames;\n    else if ('totalFrames' in opt) delete timeOpts.duration;\n\n    const timeProps = this.getTimeProps(timeOpts);\n    if (!('time' in opt || 'frame' in opt)) {\n      delete timeProps.time;\n      delete timeProps.frame;\n      delete timeProps.playhead;\n    }\n    Object.assign(this._props, timeProps);\n\n    // If either canvas or context is changed, we should re-update\n    if (oldCanvas !== this._settings.canvas || oldContext !== this._settings.context) {\n      const { canvas, context } = createCanvas(this._settings);\n\n      this.props.canvas = canvas;\n      this.props.context = context;\n\n      // Delete or add a 'gl' prop for convenience\n      this._setupGLKey();\n\n      // Re-mount the new canvas if it has no parent\n      this._appendCanvasIfNeeded();\n    }\n\n    // Special case to support P5.js\n    if (opt.p5 && typeof opt.p5 !== 'function') {\n      this.props.p5 = opt.p5;\n      this.props.p5.draw = () => {\n        if (this._isP5Resizing) return;\n        this._lastRedrawResult = this.submitDrawCall();\n      };\n    }\n\n    // Update playing state if necessary\n    if ('playing' in opt) {\n      if (opt.playing) this.play();\n      else this.pause();\n    }\n\n    // Draw new frame\n    this.resize();\n    this.render();\n    return this.props;\n  }\n\n  resize () {\n    const oldSizes = this._getSizeProps();\n\n    const settings = this.settings;\n    const props = this.props;\n\n    // Recompute new properties based on current setup\n    const newProps = resizeCanvas(props, settings);\n\n    // Assign to current props\n    Object.assign(this._props, newProps);\n\n    // Now we actually update the canvas width/height and style props\n    const {\n      pixelRatio,\n      canvasWidth,\n      canvasHeight,\n      styleWidth,\n      styleHeight\n    } = this.props;\n\n    // Update canvas settings\n    const canvas = this.props.canvas;\n    if (canvas && settings.resizeCanvas !== false) {\n      if (props.p5) {\n        // P5.js specific edge case\n        if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n          this._isP5Resizing = true;\n          // This causes a re-draw :\\ so we ignore draws in the mean time... sorta hacky\n          props.p5.pixelDensity(pixelRatio);\n          props.p5.resizeCanvas(canvasWidth / pixelRatio, canvasHeight / pixelRatio, false);\n          this._isP5Resizing = false;\n        }\n      } else {\n        // Force canvas size\n        if (canvas.width !== canvasWidth) canvas.width = canvasWidth;\n        if (canvas.height !== canvasHeight) canvas.height = canvasHeight;\n      }\n      // Update canvas style\n      if (isBrowser() && settings.styleCanvas !== false) {\n        canvas.style.width = `${styleWidth}px`;\n        canvas.style.height = `${styleHeight}px`;\n      }\n    }\n\n    const newSizes = this._getSizeProps();\n    let changed = !deepEqual(oldSizes, newSizes);\n    if (changed) {\n      this._sizeChanged();\n    }\n    return changed;\n  }\n\n  _sizeChanged () {\n    // Send resize event to sketch\n    if (this.sketch && typeof this.sketch.resize === 'function') {\n      this.sketch.resize(this.props);\n    }\n  }\n\n  animate () {\n    if (!this.props.playing) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Animation in Node.js is not yet supported');\n      return;\n    }\n    this._raf = window.requestAnimationFrame(this._animateHandler);\n\n    let now = rightNow();\n\n    const fps = this.props.fps;\n    const frameIntervalMS = 1000 / fps;\n    let deltaTimeMS = now - this._lastTime;\n\n    const duration = this.props.duration;\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n\n    let isNewFrame = true;\n    const playbackRate = this.settings.playbackRate;\n    if (playbackRate === 'fixed') {\n      deltaTimeMS = frameIntervalMS;\n    } else if (playbackRate === 'throttle') {\n      if (deltaTimeMS > frameIntervalMS) {\n        now = now - (deltaTimeMS % frameIntervalMS);\n        this._lastTime = now;\n      } else {\n        isNewFrame = false;\n      }\n    } else {\n      this._lastTime = now;\n    }\n\n    const deltaTime = deltaTimeMS / 1000;\n    let newTime = this.props.time + deltaTime * this.props.timeScale;\n\n    // Handle reverse time scale\n    if (newTime < 0 && hasDuration) {\n      newTime = duration + newTime;\n    }\n\n    // Re-start animation\n    let isFinished = false;\n    let isLoopStart = false;\n\n    const looping = this.settings.loop !== false;\n\n    if (hasDuration && newTime >= duration) {\n      // Re-start animation\n      if (looping) {\n        isNewFrame = true;\n        newTime = newTime % duration;\n        isLoopStart = true;\n      } else {\n        isNewFrame = false;\n        newTime = duration;\n        isFinished = true;\n      }\n\n      this._signalEnd();\n    }\n\n    if (isNewFrame) {\n      this.props.deltaTime = deltaTime;\n      this.props.time = newTime;\n      this.props.playhead = this._computePlayhead(newTime, duration);\n      const lastFrame = this.props.frame;\n      this.props.frame = this._computeCurrentFrame();\n      if (isLoopStart) this._signalBegin();\n      if (lastFrame !== this.props.frame) this.tick();\n      this.render();\n      this.props.deltaTime = 0;\n    }\n\n    if (isFinished) {\n      this.pause();\n    }\n  }\n\n  dispatch (cb) {\n    if (typeof cb !== 'function') throw new Error('must pass function into dispatch()');\n    cb(this.props);\n    this.render();\n  }\n\n  mount () {\n    this._appendCanvasIfNeeded();\n\n    const isParamsEnabled = this._paramManager.enabled();\n    if (isParamsEnabled && this._getParamSettings().visible !== false) {\n      HUD.attach(this);\n      this._resizeHandler();\n    }\n  }\n\n  unmount () {\n    // Detach this sketch from the HUD\n    HUD.detach(this);\n\n    if (isBrowser()) {\n      window.removeEventListener('resize', this._resizeHandler);\n      this._keyboardShortcuts.detach();\n    }\n    if (this.props.canvas.parentElement) {\n      this.props.canvas.parentElement.removeChild(this.props.canvas);\n    }\n  }\n\n  _appendCanvasIfNeeded () {\n    if (!isBrowser()) return;\n    if (this.settings.parent !== false && (this.props.canvas && !this.props.canvas.parentElement)) {\n      let defaultParent = this.settings.parent || document.body;\n      if (defaultParent === window || defaultParent === document) {\n        defaultParent = document.body;\n      }\n      defaultParent.appendChild(this.props.canvas);\n    }\n  }\n\n  _setupGLKey () {\n    if (this.props.context) {\n      if (isWebGLContext(this.props.context)) {\n        this._props.gl = this.props.context;\n      } else {\n        delete this._props.gl;\n      }\n    }\n  }\n\n  getTimeProps (settings = {}) {\n    // Get timing data\n    let duration = settings.duration;\n    let totalFrames = settings.totalFrames;\n    const timeScale = defined(settings.timeScale, 1);\n    const fps = defined(settings.fps, 24);\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n    const hasTotalFrames = typeof totalFrames === 'number' && isFinite(totalFrames);\n\n    const totalFramesFromDuration = hasDuration ? Math.floor(fps * duration) : undefined;\n    const durationFromTotalFrames = hasTotalFrames ? (totalFrames / fps) : undefined;\n    if (hasDuration && hasTotalFrames && totalFramesFromDuration !== totalFrames) {\n      throw new Error('You should specify either duration or totalFrames, but not both. Or, they must match exactly.');\n    }\n\n    if (typeof settings.dimensions === 'undefined' && typeof settings.units !== 'undefined') {\n      console.warn(`You've specified a { units } setting but no { dimension }, so the units will be ignored.`);\n    }\n\n    totalFrames = defined(totalFrames, totalFramesFromDuration, Infinity);\n    duration = defined(duration, durationFromTotalFrames, Infinity);\n\n    const startTime = settings.time;\n    const startFrame = settings.frame;\n    const hasStartTime = typeof startTime === 'number' && isFinite(startTime);\n    const hasStartFrame = typeof startFrame === 'number' && isFinite(startFrame);\n\n    // start at zero unless user specifies frame or time (but not both mismatched)\n    let time = 0;\n    let frame = 0;\n    let playhead = 0;\n    if (hasStartTime && hasStartFrame) {\n      throw new Error('You should specify either start frame or time, but not both.');\n    } else if (hasStartTime) {\n      // User specifies time, we infer frames from FPS\n      time = startTime;\n      playhead = this._computePlayhead(time, duration);\n      frame = this._computeFrame(\n        playhead, time,\n        totalFrames, fps\n      );\n    } else if (hasStartFrame) {\n      // User specifies frame number, we infer time from FPS\n      frame = startFrame;\n      time = frame / fps;\n      playhead = this._computePlayhead(time, duration);\n    }\n\n    return {\n      playhead,\n      time,\n      frame,\n      duration,\n      totalFrames,\n      fps,\n      timeScale\n    };\n  }\n\n  setup (settings = {}) {\n    if (this.sketch) throw new Error('Multiple setup() calls not yet supported.');\n\n    this._settings = Object.assign({}, settings, this._settings);\n\n    // Get initial canvas & context\n    const { context, canvas } = createCanvas(this._settings);\n\n    const timeProps = this.getTimeProps(this._settings);\n\n    this._paramManager.clear();\n    if (settings.paramOptions) {\n      this._paramManager.setStorageKey(this._getParamSettings().storageKey);\n    }\n    if (settings.params) {\n      this._paramManager.merge(settings.params);\n    }\n\n    // Initial render state features\n    this._props = {\n      ...timeProps,\n      canvas,\n      context,\n      deltaTime: 0,\n      started: false,\n      exporting: false,\n      playing: false,\n      recording: false,\n      settings: this.settings,\n      params: this._paramManager.proxy,\n\n      // Export some specific actions to the sketch\n      render: () => this.render(),\n      togglePlay: () => this.togglePlay(),\n      dispatch: (cb) => this.dispatch(cb),\n      tick: () => this.tick(),\n      resize: () => this.resize(),\n      update: (opt) => this.update(opt),\n      exportFrame: opt => this.exportFrame(opt),\n      record: () => this.record(),\n      play: () => this.play(),\n      pause: () => this.pause(),\n      stop: () => this.stop()\n    };\n\n    // For WebGL sketches, a gl variable reads a bit better\n    this._setupGLKey();\n\n    // Trigger initial resize now so that canvas is already sized\n    // by the time we load the sketch\n    this.resize();\n  }\n\n  loadAndRun (canvasSketch, newSettings) {\n    return this.load(canvasSketch, newSettings).then(() => {\n      this.run();\n      return this;\n    });\n  }\n\n  unload () {\n    this.pause();\n    if (!this.sketch) return;\n    this._paramManager.clear();\n    if (typeof this.sketch.unload === 'function') {\n      this._wrapContextScale(props => this.sketch.unload(props));\n    }\n    this._sketch = null;\n  }\n\n  destroy () {\n    this.unload();\n    this.unmount();\n  }\n\n  load (createSketch, newSettings) {\n    // User didn't specify a function\n    if (typeof createSketch !== 'function') {\n      throw new Error('The function must take in a function as the first parameter. Example:\\n  canvasSketcher(() => { ... }, settings)');\n    }\n\n    if (this.sketch) {\n      this.unload();\n    }\n\n    if (typeof newSettings !== 'undefined') {\n      this.update(newSettings);\n    }\n\n    // This is a bit of a tricky case; we set up the auto-scaling here\n    // in case the user decides to render anything to the context *before* the\n    // render() function... However, users should instead use begin() function for that.\n    this._preRender();\n\n    let preload = Promise.resolve();\n\n    // Because of P5.js's unusual structure, we have to do a bit of\n    // library-specific changes to support it properly.\n    if (this.settings.p5) {\n      if (!isBrowser()) {\n        throw new Error('[canvas-sketch] ERROR: Using p5.js in Node.js is not supported');\n      }\n      preload = new Promise(resolve => {\n        let P5Constructor = this.settings.p5;\n        let preload;\n        if (P5Constructor.p5) {\n          preload = P5Constructor.preload;\n          P5Constructor = P5Constructor.p5;\n        }\n\n        // The sketch setup; disable loop, set sizing, etc.\n        const p5Sketch = p5 => {\n          // Hook in preload if necessary\n          if (preload) p5.preload = () => preload(p5);\n          p5.setup = () => {\n            const props = this.props;\n            const isGL = this.settings.context === 'webgl';\n            const renderer = isGL ? p5.WEBGL : p5.P2D;\n            p5.noLoop();\n            p5.pixelDensity(props.pixelRatio);\n            p5.createCanvas(props.viewportWidth, props.viewportHeight, renderer);\n            if (isGL && this.settings.attributes) {\n              p5.setAttributes(this.settings.attributes);\n            }\n\n            this.update({ p5, canvas: p5.canvas, context: p5._renderer.drawingContext });\n            resolve();\n          };\n        };\n\n        // Support global and instance P5.js modes\n        if (typeof P5Constructor === 'function') {\n          new P5Constructor(p5Sketch);\n        } else {\n          if (typeof window.createCanvas !== 'function') {\n            throw new Error(\"{ p5 } setting is passed but can't find p5.js in global (window) scope. Maybe you did not create it globally?\\nnew p5(); // <-- attaches to global scope\");\n          }\n          p5Sketch(window);\n        }\n      });\n    }\n\n    return preload.then(() => {\n      // Load the user's sketch\n      let loader = createSketch(this.props);\n      if (!isPromise(loader)) {\n        loader = Promise.resolve(loader);\n      }\n      return loader;\n    }).then(sketch => {\n      if (!sketch) sketch = {};\n      this._sketch = sketch;\n\n      // Once the sketch is loaded we can add the events\n      if (isBrowser()) {\n        this._keyboardShortcuts.attach();\n        window.addEventListener('resize', this._resizeHandler);\n      }\n\n      this._postRender();\n\n      // The initial resize() in the constructor will not have\n      // triggered a resize() event on the sketch, since it was before\n      // the sketch was loaded. So we send the signal here, allowing\n      // users to react to the initial size before first render.\n      this._sizeChanged();\n      return this;\n    }).catch(err => {\n      console.warn('Could not start sketch, the async loading function rejected with an error:\\n    Error: ' + err.message);\n      throw err;\n    });\n  }\n}\n\nexport default SketchManager;\n","import { getClientAPI } from '../util';\n\nexport default function (opt = {}) {\n  const handler = ev => {\n    if (!opt.enabled()) return;\n\n    const client = getClientAPI();\n    if (ev.keyCode === 83 && !ev.altKey && (ev.metaKey || ev.ctrlKey)) {\n      // Cmd + S\n      ev.preventDefault();\n      opt.save(ev);\n    } else if (ev.keyCode === 32) {\n      // Space\n      // TODO: what to do with this? keep it, or remove it?\n      opt.togglePlay(ev);\n    } else if (client && !ev.altKey && ev.keyCode === 75 && (ev.metaKey || ev.ctrlKey)) {\n      // Cmd + K, only when canvas-sketch-cli is used\n      ev.preventDefault();\n      opt.commit(ev);\n    }\n  };\n\n  const attach = () => {\n    window.addEventListener('keydown', handler);\n  };\n\n  const detach = () => {\n    window.removeEventListener('keydown', handler);\n  };\n\n  return {\n    attach,\n    detach\n  };\n}\n","import SketchManager from './core/SketchManager';\nimport PaperSizes from './paper-sizes';\nimport HUD from './hud/HUD';\nimport { getClientAPI } from './util';\nimport defined from 'defined';\n\nconst CACHE = 'hot-id-cache';\nconst runtimeCollisions = [];\n\nfunction isHotReload () {\n  const client = getClientAPI();\n  return client && client.hot;\n}\n\nfunction cacheGet (id) {\n  const client = getClientAPI();\n  if (!client) return undefined;\n  client[CACHE] = client[CACHE] || {};\n  return client[CACHE][id];\n}\n\nfunction cachePut (id, data) {\n  const client = getClientAPI();\n  if (!client) return undefined;\n  client[CACHE] = client[CACHE] || {};\n  client[CACHE][id] = data;\n}\n\nfunction getTimeProp (oldManager, newSettings) {\n  // Static sketches ignore the time persistency\n  return newSettings.animate ? { time: oldManager.props.time } : undefined;\n}\n\nfunction canvasSketch (sketch, settings = {}) {\n  if (settings.p5) {\n    if (settings.canvas || (settings.context && typeof settings.context !== 'string')) {\n      throw new Error(`In { p5 } mode, you can't pass your own canvas or context, unless the context is a \"webgl\" or \"2d\" string`);\n    }\n\n    // Do not create a canvas on startup, since P5.js does that for us\n    const context = typeof settings.context === 'string' ? settings.context : false;\n    settings = Object.assign({}, settings, { canvas: false, context });\n  }\n\n  const isHot = isHotReload();\n  let hotID;\n  if (isHot) {\n    // Use a magic name by default, force user to define each sketch if they\n    // require more than one in an application. Open to other ideas on how to tackle\n    // this as well...\n    hotID = defined(settings.id, '$__DEFAULT_CANVAS_SKETCH_ID__$');\n  }\n  let isInjecting = isHot && typeof hotID === 'string';\n\n  if (isInjecting && runtimeCollisions.includes(hotID)) {\n    console.warn(`Warning: You have multiple calls to canvasSketch() in --hot mode. You must pass unique { id } strings in settings to enable hot reload across multiple sketches. `, hotID);\n    isInjecting = false;\n  }\n\n  let preload = Promise.resolve();\n\n  if (isInjecting) {\n    // Mark this as already spotted in this runtime instance\n    runtimeCollisions.push(hotID);\n\n    const previousData = cacheGet(hotID);\n    if (previousData) {\n      const next = () => {\n        // Grab new props from old sketch instance\n        const newProps = getTimeProp(previousData.manager, settings);\n        // Destroy the old instance\n        previousData.manager.destroy();\n        // Pass along new props\n        return newProps;\n      };\n\n      // Move along the next data...\n      preload = previousData.load.then(next).catch(next);\n    }\n  }\n\n  return preload.then(newProps => {\n    const manager = new SketchManager();\n    let result;\n    if (sketch) {\n      // Merge with incoming data\n      settings = Object.assign({}, settings, newProps);\n\n      // Apply settings and create a canvas\n      manager.setup(settings);\n\n      // Mount to DOM\n      manager.mount();\n\n      // load the sketch first\n      result = manager.loadAndRun(sketch);\n    } else {\n      result = Promise.resolve(manager);\n    }\n    if (isInjecting) {\n      cachePut(hotID, { load: result, manager });\n    }\n    return result;\n  });\n}\n\n// TODO: Figure out a nice way to export things.\ncanvasSketch.canvasSketch = canvasSketch;\ncanvasSketch.PaperSizes = PaperSizes;\n\ncanvasSketch.HUD = HUD;\n\nexport default canvasSketch;\n"],"names":["getClientAPI","window","isBrowser","document","const","link","noop","supportedEncodings","saveDataURL","dataURL","opts","Promise","resolve","splitIndex","indexOf","base64","slice","byteString","atob","mimeMatch","exec","mime","undefined","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","createBlobFromDataURL","then","blob","saveBlob","filename","opt","assign","file","let","frame","extension","totalFrames","Math","max","padLeft","String","layerStr","isFinite","totalLayers","layer","filter","Boolean","join","defaultFileName","timeStamp","prefix","name","hash","suffix","resolveFilename","client","output","ev","createElement","style","visibility","target","download","href","URL","createObjectURL","body","appendChild","onclick","setTimeout","revokeObjectURL","removeChild","removeAttribute","click","saveFile","data","parts","Array","isArray","reduce","dict","preset","item","units","dimensions","replace","convertDistance","dimension","unitsFrom","unitsTo","pixelsPerInch","convertLength","precision","roundPixel","key","value","defaults","Object","meta","reservedKeys","ParamNode","inputType","inputValue","attrs","parsedColor","parseColor","hex","hasMin","min","hasMax","step","checked","onChange","newValue","currentTarget","valueAsNumber","class","h","sketch","settings","onInput","ParamGroup","inserted","attached","element","floating","browser","getSize","getBoundingClientRect","manager","includes","push","update","idx","splice","_updateFloat","classList","remove","add","insertCSS","CSS","render","firstElementChild","parentElement","HUD","resizeCanvas","props","width","height","styleWidth","styleHeight","canvasWidth","canvasHeight","pixelRatio","exportPixelRatio","hasDimensions","checkIfHasDimensions","exporting","scaleToFit","scaleToView","bleed","defined","devicePixelRatio","basePixelRatio","maxPixelRatio","trimWidth","trimHeight","parent","hudSize","innerWidth","innerHeight","getParentSize","result","toLowerCase","paperSizes","Error","map","d","getDimensionsFromPreset","highest","lowest","orientation","landscape","parentWidth","parentHeight","realWidth","realHeight","round","aspect","windowAspect","scaleToFitPadding","maxWidth","maxHeight","viewportWidth","viewportHeight","createCanvas","context","canvas","ownsCanvas","newCanvas","createCanvasElement","getContext","getCanvasContext","attributes","pixelated","imageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","ParamManager","proxy","storageKey","storage","setStorageKey","clear","keys","this","forEach","clearProp","enabled","n","serialize","pretty","JSON","stringify","lastStorageKey","newStorage","global","CANVAS_SKETCH_DEFAULT_STORAGE_KEY","location","ensureStorageLoaded","localStorage","getItem","parse","err","console","warn","getStorage","store","setItem","clampProp","prop","addProp","initialValue","updateProp","merge","params","paramProps","toParamProps","updatePropValue","computedProps","curProp","applyChanges","log","SketchManager","_settings","_props","_sketch","_raf","_paramManager","_lastRedrawResult","_isP5Resizing","_keyboardShortcuts","handler","keyCode","altKey","metaKey","ctrlKey","togglePlay","preventDefault","commit","save","addEventListener","removeEventListener","keyboardShortcuts","hotkeys","shiftKey","recording","endRecord","play","record","exportFrame","playing","pause","_animateHandler","animate","_resizeHandler","resize","_getParamSettings","paramOptions","_computePlayhead","currentTime","duration","_computeFrame","playhead","time","fps","floor","_computeCurrentFrame","_getSizeProps","run","dispose","started","_signalBegin","tick","cancelAnimationFrame","_lastTime","rightNow","requestAnimationFrame","error","stop","deltaTime","exportParams","frameInterval","_signalEnd","begin","_wrapContextScale","end","all","preExport","exportOpts","sequence","encoding","encodingQuality","dateformat","Date","p","commitOpts","isPromise","_doExportFrame","paramData","drawResult","concat","export","hasDataObject","isDOM","test","nodeName","split","toDataURL","exportCanvas","layerList","curOpt","eventWithOutput","find","e","outputName","isClient","some","ofSeq","postExport","cb","_preRender","_postRender","gl","p5","scale","scaleX","scaleY","scaleContext","restore","flush","redraw","submitDrawCall","notYetSupported","oldCanvas","oldContext","visible","attach","detach","timeOpts","timeProps","getTimeProps","_setupGLKey","_appendCanvasIfNeeded","draw","oldSizes","newProps","pixelDensity","styleCanvas","newSizes","changed","deepEqual","_sizeChanged","now","frameIntervalMS","deltaTimeMS","hasDuration","isNewFrame","playbackRate","newTime","timeScale","isFinished","isLoopStart","loop","lastFrame","dispatch","mount","unmount","defaultParent","ctx","clearColor","bufferData","hasTotalFrames","totalFramesFromDuration","durationFromTotalFrames","Infinity","startTime","startFrame","hasStartTime","hasStartFrame","setup","loadAndRun","canvasSketch","newSettings","load","unload","destroy","createSketch","preload","P5Constructor","p5Sketch","isGL","renderer","WEBGL","P2D","noLoop","setAttributes","_renderer","drawingContext","loader","catch","message","CACHE","runtimeCollisions","hotID","isHot","hot","id","isInjecting","previousData","cacheGet","next","PaperSizes"],"mappings":"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"}